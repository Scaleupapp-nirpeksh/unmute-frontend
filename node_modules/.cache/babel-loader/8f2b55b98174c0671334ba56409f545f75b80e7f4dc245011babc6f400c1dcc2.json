{"ast":null,"code":"// src/pages/Matches/Matches.jsx\nimport React,{useState,useEffect}from'react';import{Typography,Box,CircularProgress,Card,CardContent,Avatar,Button,Grid,Chip,Tabs,Tab,Snackbar,Alert,Dialog,DialogTitle,DialogContent,DialogActions,LinearProgress}from'@mui/material';import{useAuth}from'../../contexts/AuthContext';import{useNavigate}from'react-router-dom';import{matchService}from'../../services/match';import{authService}from'../../services/auth';// Define a mapping for emotions with their colors and labels\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const emotionMapping={Happy:{color:'#FFD700',label:'Happy'},Sad:{color:'#2196F3',label:'Sad'},Angry:{color:'#F44336',label:'Angry'},Anxious:{color:'#FF9800',label:'Anxious'},Neutral:{color:'#9E9E9E',label:'Neutral'},Burnout:{color:'#6D4C41',label:'Burnout'}};export default function Matches(){const{user}=useAuth();const navigate=useNavigate();const[tabValue,setTabValue]=useState(0);const[loading,setLoading]=useState(false);const[matches,setMatches]=useState([]);const[pendingMatches,setPendingMatches]=useState({received:[],sent:[]});const[history,setHistory]=useState([]);const[snackbar,setSnackbar]=useState({open:false,message:'',severity:'success'});// State for the profile dialog pop-up\nconst[openProfileDialog,setOpenProfileDialog]=useState(false);const[profileData,setProfileData]=useState(null);// Fetch match data once the user is available\nuseEffect(()=>{if(user&&user._id){fetchMatchSuggestions();fetchPendingMatches();fetchMatchHistory();}},[user]);// Fetch suggestions from the backend then filter out any match where the logged in user has accepted.\nconst fetchMatchSuggestions=async()=>{setLoading(true);try{const res=await matchService.getMatchSuggestions();if(res.data&&res.data.matches){// Filter out matches that the logged in user has already accepted.\nconst filteredMatches=res.data.matches.filter(match=>{// If user is user1, ensure user1Accepted is false.\nif(match.user1._id===user._id){return!match.user1Accepted;}else{// Otherwise, user is user2: ensure user2Accepted is false.\nreturn!match.user2Accepted;}});setMatches(filteredMatches);}}catch(error){console.error('Error fetching match suggestions',error);}finally{setLoading(false);}};const fetchPendingMatches=async()=>{try{const res=await matchService.getPendingMatches();if(res.data&&res.data.success){setPendingMatches({received:res.data.receivedMatches,sent:res.data.sentMatches});}}catch(error){console.error('Error fetching pending matches',error);}};const fetchMatchHistory=async()=>{try{const res=await matchService.getMatchHistory();if(res.data&&res.data.history){setHistory(res.data.history);}}catch(error){console.error('Error fetching match history',error);}};const handleTabChange=(event,newValue)=>{setTabValue(newValue);};const handleAcceptMatch=async matchId=>{try{const res=await matchService.acceptMatch({matchId});if(res.data&&res.data.success){setSnackbar({open:true,message:'Match accepted!',severity:'success'});// Refresh the lists\nfetchMatchSuggestions();fetchPendingMatches();}}catch(error){console.error('Error accepting match',error);setSnackbar({open:true,message:'Failed to accept match',severity:'error'});}};const handleRejectMatch=async matchId=>{try{const res=await matchService.rejectMatch({matchId});if(res.data&&res.data.success){setSnackbar({open:true,message:'Match rejected',severity:'success'});// Refresh the lists\nfetchMatchSuggestions();fetchPendingMatches();}}catch(error){console.error('Error rejecting match',error);setSnackbar({open:true,message:'Failed to reject match',severity:'error'});}};// Open profile dialog by fetching user details using authService\nconst handleOpenProfile=async userId=>{try{const res=await authService.getUserDetails(userId);if(res.data&&res.data.user){setProfileData(res.data.user);setOpenProfileDialog(true);}}catch(error){console.error('Error fetching profile details',error);}};const handleCloseProfileDialog=()=>{setOpenProfileDialog(false);setProfileData(null);};// Render a match suggestion card with enhanced visuals\nconst renderMatchCard=match=>{// Determine the matched user (the other user)\nlet matchedUser=match.user1._id===user._id?match.user2:match.user1;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:'16px',p:2,mb:2,boxShadow:3,transition:'transform 0.2s','&:hover':{transform:'scale(1.02)'}},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(Avatar,{src:matchedUser.profilePic||'/default-avatar.png',sx:{width:56,height:56,mr:2,cursor:'pointer'},onClick:()=>handleOpenProfile(matchedUser._id),children:matchedUser.username.charAt(0).toUpperCase()}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{cursor:'pointer',textDecoration:'underline','&:hover':{color:'primary.main'}},onClick:()=>handleOpenProfile(matchedUser._id),children:matchedUser.username})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mb:1},children:[\"Match Score: \",match.matchScore.toFixed(2)]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:match.matchScore*100,sx:{height:8,borderRadius:4,mb:1}}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mb:2,mt:1},children:match.commonEmotions&&match.commonEmotions.map((emotion,idx)=>{const emotionData=emotionMapping[emotion]||{color:'#000',label:emotion};return/*#__PURE__*/_jsx(Chip,{label:emotionData.label,size:\"small\",sx:{backgroundColor:emotionData.color,color:'#fff'}},idx);})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>handleAcceptMatch(match._id),children:\"Accept\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:()=>handleRejectMatch(match._id),children:\"Reject\"})]})]})})},match._id);};// Render pending and history cards similarly\nconst renderPendingCard=(match,type)=>{return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:'16px',p:2,mb:2,boxShadow:2,transition:'transform 0.2s','&:hover':{transform:'scale(1.02)'}},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{cursor:'pointer',textDecoration:'underline','&:hover':{color:'primary.main'}},onClick:()=>handleOpenProfile(type==='received'?match.fromId:match.toId),children:type==='received'?`From: ${match.from}`:`To: ${match.to}`}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mb:1},children:[\"Match Score: \",match.matchScore.toFixed(2)]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:match.matchScore*100,sx:{height:8,borderRadius:4,mb:1}}),/*#__PURE__*/_jsx(Chip,{label:match.status,size:\"small\"})]})})},match.matchId);};const renderHistoryCard=entry=>{return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:'16px',p:2,mb:2,boxShadow:2,transition:'transform 0.2s','&:hover':{transform:'scale(1.02)'}},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[entry.user1,\" & \",entry.user2]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mb:1},children:[\"Score: \",entry.matchScore.toFixed(2)]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:entry.matchScore*100,sx:{height:8,borderRadius:4,mb:1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Status: \",entry.status]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:new Date(entry.timestamp).toLocaleString()})]})})},entry.matchId);};return/*#__PURE__*/_jsxs(Box,{sx:{p:3,minHeight:'100vh',background:'linear-gradient(135deg, #80DEEA, #CE93D8)'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:3,color:'#333',textAlign:'center'},children:\"Matches\"}),/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,centered:true,sx:{mb:3},children:[/*#__PURE__*/_jsx(Tab,{label:\"Suggestions\"}),/*#__PURE__*/_jsx(Tab,{label:\"Pending\"}),/*#__PURE__*/_jsx(Tab,{label:\"History\"})]}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mt:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsxs(_Fragment,{children:[tabValue===0&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,justifyContent:\"center\",children:matches.length>0?matches.map(renderMatchCard):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:2,width:'100%',textAlign:'center'},children:\"No match suggestions available.\"})}),tabValue===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Received Matches\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,justifyContent:\"center\",children:pendingMatches.received&&pendingMatches.received.length>0?pendingMatches.received.map(match=>renderPendingCard(match,'received')):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:2,width:'100%',textAlign:'center'},children:\"No pending received matches.\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2,mt:4},children:\"Sent Matches\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,justifyContent:\"center\",children:pendingMatches.sent&&pendingMatches.sent.length>0?pendingMatches.sent.map(match=>renderPendingCard(match,'sent')):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:2,width:'100%',textAlign:'center'},children:\"No pending sent matches.\"})})]}),tabValue===2&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,justifyContent:\"center\",children:history.length>0?history.map(renderHistoryCard):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:2,width:'100%',textAlign:'center'},children:\"No match history available.\"})})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:3000,onClose:()=>setSnackbar({...snackbar,open:false}),children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setSnackbar({...snackbar,open:false}),severity:snackbar.severity,children:snackbar.message})}),/*#__PURE__*/_jsxs(Dialog,{open:openProfileDialog,onClose:handleCloseProfileDialog,fullWidth:true,maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"User Profile\"}),/*#__PURE__*/_jsx(DialogContent,{children:profileData?/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',p:2},children:[/*#__PURE__*/_jsx(Avatar,{src:profileData.profilePic||'/default-avatar.png',sx:{width:100,height:100,margin:'0 auto',mb:2},children:profileData.username.charAt(0).toUpperCase()}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mb:1},children:profileData.username}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mb:2},children:profileData.bio||'No bio provided.'}),/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Interests\"}),profileData.interests&&profileData.interests.length>0?profileData.interests.map((interest,idx)=>/*#__PURE__*/_jsx(Chip,{label:interest,sx:{m:0.5}},idx)):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Not specified.\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Likes\"}),profileData.likes&&profileData.likes.length>0?profileData.likes.map((like,idx)=>/*#__PURE__*/_jsx(Chip,{label:like,sx:{m:0.5,backgroundColor:'#B5FFFC'}},idx)):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Not specified.\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Dislikes\"}),profileData.dislikes&&profileData.dislikes.length>0?profileData.dislikes.map((dislike,idx)=>/*#__PURE__*/_jsx(Chip,{label:dislike,sx:{m:0.5,backgroundColor:'#FFE7A6'}},idx)):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Not specified.\"})]})]}):/*#__PURE__*/_jsx(CircularProgress,{sx:{display:'block',margin:'0 auto'}})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseProfileDialog,color:\"primary\",children:\"Close\"})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","CircularProgress","Card","CardContent","Avatar","Button","Grid","Chip","Tabs","Tab","Snackbar","Alert","Dialog","DialogTitle","DialogContent","DialogActions","LinearProgress","useAuth","useNavigate","matchService","authService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","emotionMapping","Happy","color","label","Sad","Angry","Anxious","Neutral","Burnout","Matches","user","navigate","tabValue","setTabValue","loading","setLoading","matches","setMatches","pendingMatches","setPendingMatches","received","sent","history","setHistory","snackbar","setSnackbar","open","message","severity","openProfileDialog","setOpenProfileDialog","profileData","setProfileData","_id","fetchMatchSuggestions","fetchPendingMatches","fetchMatchHistory","res","getMatchSuggestions","data","filteredMatches","filter","match","user1","user1Accepted","user2Accepted","error","console","getPendingMatches","success","receivedMatches","sentMatches","getMatchHistory","handleTabChange","event","newValue","handleAcceptMatch","matchId","acceptMatch","handleRejectMatch","rejectMatch","handleOpenProfile","userId","getUserDetails","handleCloseProfileDialog","renderMatchCard","matchedUser","user2","item","xs","sm","md","children","sx","borderRadius","p","mb","boxShadow","transition","transform","display","alignItems","src","profilePic","width","height","mr","cursor","onClick","username","charAt","toUpperCase","variant","textDecoration","matchScore","toFixed","value","flexWrap","gap","mt","commonEmotions","map","emotion","idx","emotionData","size","backgroundColor","justifyContent","renderPendingCard","type","fromId","toId","from","to","status","renderHistoryCard","entry","Date","timestamp","toLocaleString","minHeight","background","textAlign","onChange","centered","container","spacing","length","autoHideDuration","onClose","fullWidth","maxWidth","margin","bio","interests","interest","m","likes","like","dislikes","dislike"],"sources":["/Users/nirpekshnandan/unmute-frontend/src/pages/Matches/Matches.jsx"],"sourcesContent":["// src/pages/Matches/Matches.jsx\nimport React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  CircularProgress,\n  Card,\n  CardContent,\n  Avatar,\n  Button,\n  Grid,\n  Chip,\n  Tabs,\n  Tab,\n  Snackbar,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  LinearProgress,\n} from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { matchService } from '../../services/match';\nimport { authService } from '../../services/auth';\n\n// Define a mapping for emotions with their colors and labels\nconst emotionMapping = {\n  Happy: { color: '#FFD700', label: 'Happy' },\n  Sad: { color: '#2196F3', label: 'Sad' },\n  Angry: { color: '#F44336', label: 'Angry' },\n  Anxious: { color: '#FF9800', label: 'Anxious' },\n  Neutral: { color: '#9E9E9E', label: 'Neutral' },\n  Burnout: { color: '#6D4C41', label: 'Burnout' },\n};\n\nexport default function Matches() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [tabValue, setTabValue] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [matches, setMatches] = useState([]);\n  const [pendingMatches, setPendingMatches] = useState({ received: [], sent: [] });\n  const [history, setHistory] = useState([]);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n\n  // State for the profile dialog pop-up\n  const [openProfileDialog, setOpenProfileDialog] = useState(false);\n  const [profileData, setProfileData] = useState(null);\n\n  // Fetch match data once the user is available\n  useEffect(() => {\n    if (user && user._id) {\n      fetchMatchSuggestions();\n      fetchPendingMatches();\n      fetchMatchHistory();\n    }\n  }, [user]);\n\n  // Fetch suggestions from the backend then filter out any match where the logged in user has accepted.\n  const fetchMatchSuggestions = async () => {\n    setLoading(true);\n    try {\n      const res = await matchService.getMatchSuggestions();\n      if (res.data && res.data.matches) {\n        // Filter out matches that the logged in user has already accepted.\n        const filteredMatches = res.data.matches.filter(match => {\n          // If user is user1, ensure user1Accepted is false.\n          if (match.user1._id === user._id) {\n            return !match.user1Accepted;\n          } else {\n            // Otherwise, user is user2: ensure user2Accepted is false.\n            return !match.user2Accepted;\n          }\n        });\n        setMatches(filteredMatches);\n      }\n    } catch (error) {\n      console.error('Error fetching match suggestions', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPendingMatches = async () => {\n    try {\n      const res = await matchService.getPendingMatches();\n      if (res.data && res.data.success) {\n        setPendingMatches({\n          received: res.data.receivedMatches,\n          sent: res.data.sentMatches,\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching pending matches', error);\n    }\n  };\n\n  const fetchMatchHistory = async () => {\n    try {\n      const res = await matchService.getMatchHistory();\n      if (res.data && res.data.history) {\n        setHistory(res.data.history);\n      }\n    } catch (error) {\n      console.error('Error fetching match history', error);\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleAcceptMatch = async (matchId) => {\n    try {\n      const res = await matchService.acceptMatch({ matchId });\n      if (res.data && res.data.success) {\n        setSnackbar({ open: true, message: 'Match accepted!', severity: 'success' });\n        // Refresh the lists\n        fetchMatchSuggestions();\n        fetchPendingMatches();\n      }\n    } catch (error) {\n      console.error('Error accepting match', error);\n      setSnackbar({ open: true, message: 'Failed to accept match', severity: 'error' });\n    }\n  };\n\n  const handleRejectMatch = async (matchId) => {\n    try {\n      const res = await matchService.rejectMatch({ matchId });\n      if (res.data && res.data.success) {\n        setSnackbar({ open: true, message: 'Match rejected', severity: 'success' });\n        // Refresh the lists\n        fetchMatchSuggestions();\n        fetchPendingMatches();\n      }\n    } catch (error) {\n      console.error('Error rejecting match', error);\n      setSnackbar({ open: true, message: 'Failed to reject match', severity: 'error' });\n    }\n  };\n\n  // Open profile dialog by fetching user details using authService\n  const handleOpenProfile = async (userId) => {\n    try {\n      const res = await authService.getUserDetails(userId);\n      if (res.data && res.data.user) {\n        setProfileData(res.data.user);\n        setOpenProfileDialog(true);\n      }\n    } catch (error) {\n      console.error('Error fetching profile details', error);\n    }\n  };\n\n  const handleCloseProfileDialog = () => {\n    setOpenProfileDialog(false);\n    setProfileData(null);\n  };\n\n  // Render a match suggestion card with enhanced visuals\n  const renderMatchCard = (match) => {\n    // Determine the matched user (the other user)\n    let matchedUser = match.user1._id === user._id ? match.user2 : match.user1;\n    return (\n      <Grid item xs={12} sm={6} md={4} key={match._id}>\n        <Card\n          sx={{\n            borderRadius: '16px',\n            p: 2,\n            mb: 2,\n            boxShadow: 3,\n            transition: 'transform 0.2s',\n            '&:hover': { transform: 'scale(1.02)' },\n          }}\n        >\n          <CardContent>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar\n                src={matchedUser.profilePic || '/default-avatar.png'}\n                sx={{ width: 56, height: 56, mr: 2, cursor: 'pointer' }}\n                onClick={() => handleOpenProfile(matchedUser._id)}\n              >\n                {matchedUser.username.charAt(0).toUpperCase()}\n              </Avatar>\n              <Typography\n                variant=\"h6\"\n                sx={{\n                  cursor: 'pointer',\n                  textDecoration: 'underline',\n                  '&:hover': { color: 'primary.main' },\n                }}\n                onClick={() => handleOpenProfile(matchedUser._id)}\n              >\n                {matchedUser.username}\n              </Typography>\n            </Box>\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n              Match Score: {match.matchScore.toFixed(2)}\n            </Typography>\n            <LinearProgress\n              variant=\"determinate\"\n              value={match.matchScore * 100}\n              sx={{ height: 8, borderRadius: 4, mb: 1 }}\n            />\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2, mt: 1 }}>\n              {match.commonEmotions &&\n                match.commonEmotions.map((emotion, idx) => {\n                  const emotionData = emotionMapping[emotion] || { color: '#000', label: emotion };\n                  return (\n                    <Chip\n                      key={idx}\n                      label={emotionData.label}\n                      size=\"small\"\n                      sx={{ backgroundColor: emotionData.color, color: '#fff' }}\n                    />\n                  );\n                })}\n            </Box>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => handleAcceptMatch(match._id)}>\n                Accept\n              </Button>\n              <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleRejectMatch(match._id)}>\n                Reject\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  // Render pending and history cards similarly\n  const renderPendingCard = (match, type) => {\n    return (\n      <Grid item xs={12} sm={6} md={4} key={match.matchId}>\n        <Card\n          sx={{\n            borderRadius: '16px',\n            p: 2,\n            mb: 2,\n            boxShadow: 2,\n            transition: 'transform 0.2s',\n            '&:hover': { transform: 'scale(1.02)' },\n          }}\n        >\n          <CardContent>\n            <Typography\n              variant=\"h6\"\n              sx={{\n                cursor: 'pointer',\n                textDecoration: 'underline',\n                '&:hover': { color: 'primary.main' },\n              }}\n              onClick={() => handleOpenProfile(type === 'received' ? match.fromId : match.toId)}\n            >\n              {type === 'received' ? `From: ${match.from}` : `To: ${match.to}`}\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n              Match Score: {match.matchScore.toFixed(2)}\n            </Typography>\n            <LinearProgress\n              variant=\"determinate\"\n              value={match.matchScore * 100}\n              sx={{ height: 8, borderRadius: 4, mb: 1 }}\n            />\n            <Chip label={match.status} size=\"small\" />\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  const renderHistoryCard = (entry) => {\n    return (\n      <Grid item xs={12} sm={6} md={4} key={entry.matchId}>\n        <Card\n          sx={{\n            borderRadius: '16px',\n            p: 2,\n            mb: 2,\n            boxShadow: 2,\n            transition: 'transform 0.2s',\n            '&:hover': { transform: 'scale(1.02)' },\n          }}\n        >\n          <CardContent>\n            <Typography variant=\"h6\">{entry.user1} & {entry.user2}</Typography>\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n              Score: {entry.matchScore.toFixed(2)}\n            </Typography>\n            <LinearProgress\n              variant=\"determinate\"\n              value={entry.matchScore * 100}\n              sx={{ height: 8, borderRadius: 4, mb: 1 }}\n            />\n            <Typography variant=\"body2\">Status: {entry.status}</Typography>\n            <Typography variant=\"caption\">{new Date(entry.timestamp).toLocaleString()}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <Box sx={{ p: 3, minHeight: '100vh', background: 'linear-gradient(135deg, #80DEEA, #CE93D8)' }}>\n      <Typography variant=\"h4\" sx={{ mb: 3, color: '#333', textAlign: 'center' }}>\n        Matches\n      </Typography>\n      <Tabs value={tabValue} onChange={handleTabChange} centered sx={{ mb: 3 }}>\n        <Tab label=\"Suggestions\" />\n        <Tab label=\"Pending\" />\n        <Tab label=\"History\" />\n      </Tabs>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>\n          {tabValue === 0 && (\n            <Grid container spacing={2} justifyContent=\"center\">\n              {matches.length > 0 ? (\n                matches.map(renderMatchCard)\n              ) : (\n                <Typography variant=\"body1\" sx={{ mt: 2, width: '100%', textAlign: 'center' }}>\n                  No match suggestions available.\n                </Typography>\n              )}\n            </Grid>\n          )}\n          {tabValue === 1 && (\n            <Box>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>Received Matches</Typography>\n              <Grid container spacing={2} justifyContent=\"center\">\n                {pendingMatches.received && pendingMatches.received.length > 0 ? (\n                  pendingMatches.received.map((match) => renderPendingCard(match, 'received'))\n                ) : (\n                  <Typography variant=\"body1\" sx={{ mt: 2, width: '100%', textAlign: 'center' }}>\n                    No pending received matches.\n                  </Typography>\n                )}\n              </Grid>\n              <Typography variant=\"h6\" sx={{ mb: 2, mt: 4 }}>Sent Matches</Typography>\n              <Grid container spacing={2} justifyContent=\"center\">\n                {pendingMatches.sent && pendingMatches.sent.length > 0 ? (\n                  pendingMatches.sent.map((match) => renderPendingCard(match, 'sent'))\n                ) : (\n                  <Typography variant=\"body1\" sx={{ mt: 2, width: '100%', textAlign: 'center' }}>\n                    No pending sent matches.\n                  </Typography>\n                )}\n              </Grid>\n            </Box>\n          )}\n          {tabValue === 2 && (\n            <Grid container spacing={2} justifyContent=\"center\">\n              {history.length > 0 ? (\n                history.map(renderHistoryCard)\n              ) : (\n                <Typography variant=\"body1\" sx={{ mt: 2, width: '100%', textAlign: 'center' }}>\n                  No match history available.\n                </Typography>\n              )}\n            </Grid>\n          )}\n        </>\n      )}\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={3000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n      >\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n\n      {/* User Profile Dialog */}\n      <Dialog open={openProfileDialog} onClose={handleCloseProfileDialog} fullWidth maxWidth=\"sm\">\n        <DialogTitle>User Profile</DialogTitle>\n        <DialogContent>\n          {profileData ? (\n            <Box sx={{ textAlign: 'center', p: 2 }}>\n              <Avatar\n                src={profileData.profilePic || '/default-avatar.png'}\n                sx={{ width: 100, height: 100, margin: '0 auto', mb: 2 }}\n              >\n                {profileData.username.charAt(0).toUpperCase()}\n              </Avatar>\n              <Typography variant=\"h5\" sx={{ mb: 1 }}>\n                {profileData.username}\n              </Typography>\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                {profileData.bio || 'No bio provided.'}\n              </Typography>\n              <Box sx={{ mb: 1 }}>\n                <Typography variant=\"subtitle1\">Interests</Typography>\n                {profileData.interests && profileData.interests.length > 0 ? (\n                  profileData.interests.map((interest, idx) => (\n                    <Chip key={idx} label={interest} sx={{ m: 0.5 }} />\n                  ))\n                ) : (\n                  <Typography variant=\"body2\">Not specified.</Typography>\n                )}\n              </Box>\n              <Box sx={{ mb: 1 }}>\n                <Typography variant=\"subtitle1\">Likes</Typography>\n                {profileData.likes && profileData.likes.length > 0 ? (\n                  profileData.likes.map((like, idx) => (\n                    <Chip key={idx} label={like} sx={{ m: 0.5, backgroundColor: '#B5FFFC' }} />\n                  ))\n                ) : (\n                  <Typography variant=\"body2\">Not specified.</Typography>\n                )}\n              </Box>\n              <Box sx={{ mb: 1 }}>\n                <Typography variant=\"subtitle1\">Dislikes</Typography>\n                {profileData.dislikes && profileData.dislikes.length > 0 ? (\n                  profileData.dislikes.map((dislike, idx) => (\n                    <Chip key={idx} label={dislike} sx={{ m: 0.5, backgroundColor: '#FFE7A6' }} />\n                  ))\n                ) : (\n                  <Typography variant=\"body2\">Not specified.</Typography>\n                )}\n              </Box>\n            </Box>\n          ) : (\n            <CircularProgress sx={{ display: 'block', margin: '0 auto' }} />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseProfileDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}